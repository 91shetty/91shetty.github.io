{"version":3,"sources":["containers/Home.js","components/LoaderButton.js","containers/Login.js","config.js","containers/Signup.js","containers/CreateMatch.js","containers/CreateTeam.js","containers/NotFound.js","components/AppliedRoute.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Matches","Component","props","_this3","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleUpdateVote","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee2","event","wrap","_context2","prev","next","updateVote","matchId","target","name","teamId","value","t0","console","log","stop","_x2","apply","arguments","state","team1","score1","seed1","imageURL1","team2","score2","seed2","imageURL2","vote","teams","document","querySelector","querySelectorAll","newRequest","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","team","classList","contains","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","add","closest","remove","API","put","body","_this4","group","react_default","createElement","className","id","type","onChange","e","aria-hidden","src","alt","Round","_this5","round","roundInfo","_this6","Fragment","west","map","match","teamIds","teamScores","teamSeeds","teamImageURLS","keys","score","push","seed","imageURL","Home_Matches","key","east","Final","_this7","_this8","Home","_this9","isLoading","votes","matches","isAuthenticated","fetchMatches","matchesResults","fetchVotes","userVotes","setState","input","setAttribute","parentNode","_context3","get","_this10","Home_Round","Home_Final","renderVotes","renderLander","components_LoaderButton","_ref","text","loadingText","_ref$className","_ref$disabled","disabled","objectWithoutProperties","Button","assign","concat","Glyphicon","glyph","Login","_this","handleChange","defineProperty","handleSubmit","_callee","data","_context","preventDefault","Auth","signIn","email","password","sent","updateUserGroup","signInUserSession","accessToken","payload","userHasAuthenticated","history","getElementById","style","display","innerHTML","message","_x","isConfirmed","length","onSubmit","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","HelpBlock","block","validateForm","config","REGION","URL","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","Signup","newUser","signUp","username","then","userSub","addUsersToGroups","handleConfirmationSubmit","confirmSignUp","confirmationCode","groups","confirmPassword","AWS","update","credentials","CognitoIdentityCredentials","IdentityPoolId","region","cognitoidentityserviceprovider","CognitoIdentityServiceProvider","params","GroupName","UserPoolId","Username","adminAddUserToGroup","stack","validateConfirmationForm","renderForm","renderConfirmationForm","CreateMatch","createMatch","nextMatch","getElementsByTagName","reset","post","CreateTeam","containers_NotFound","AppliedRoute","C","component","cProps","rest","Route","render","Routes","childProps","Switch","path","exact","NotFound","App","authenticated","groupName","handleLogout","signOut","isAuthenticating","currentSession","fetchUserGroup","Navbar","fluid","collapseOnSelect","Header","Brand","Link","to","Toggle","Collapse","Nav","pullRight","NavItem","onClick","react","lib","withRouter","Boolean","window","location","hostname","Amplify","configure","mandatorySignIn","userPoolId","identityPoolId","userPoolWebClientId","endpoints","endpoint","ReactDOM","BrowserRouter","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.61da3c2d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { API } from \"aws-amplify\";\nimport \"./Home.sass\";\n\nclass Score extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            score: this.props.score\n        }\n    }\n\n    updateScore(score) {\n        return API.put(\"matches\", \"/matches\", {\n            body: score\n        });\n    }\n\n    handleUpdateScore = async event => {\n        try {\n            this.setState({ score: event.target.value });\n            await this.updateScore({\n                matchId: this.props.matchId,\n                teamId: this.props.team,\n                score: parseInt(event.target.value),\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    render() {\n        return (\n            <input type=\"number\" name={this.props.team} value={this.state.score} onChange={(e) => this.handleUpdateScore(e)} min=\"0\" max=\"4\" />\n        );\n    }\n}\n\nclass Matches extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            matchId: this.props.matchId,\n            team1: this.props.team1,\n            score1: this.props.score1,\n            seed1: this.props.seed1,\n            imageURL1: this.props.imageURL1,\n            team2: this.props.team2,\n            score2: this.props.score2,\n            seed2: this.props.seed2,\n            imageURL2: this.props.imageURL2\n        }\n    }\n\n    updateVote(vote) {\n        console.log('change');\n        let teams = document.querySelector(\"#\" + this.state.matchId).querySelectorAll('label.team');\n        let newRequest = true;\n        for(let team of teams) {\n            if (team.querySelector('input').value === vote.teamId && team.classList.contains('pick')) {\n                newRequest = false;\n                break;\n            }\n        }\n        if (newRequest) {\n            for(let team of teams) {\n                if(team.querySelector('input').value === vote.teamId) {\n                    team.classList.add('pick');\n                    team.closest('.match').classList.add('voted');\n                }\n                else {\n                    team.classList.remove('pick');\n                }\n            }\n            return API.put(\"votes\", \"/votes\", {\n                body: vote\n            });\n        }\n        else {\n            return;\n        }\n    }\n\n    handleUpdateVote = async event => {\n        try {\n            await this.updateVote({\n                matchId: event.target.name,\n                teamId: event.target.value\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    render() {\n        const isAdmin = this.state.group == \"Admin\" ? true : false;\n        return (\n            <div className=\"match\" id={this.state.matchId}>\n                <div className=\"logos\">\n                    <label className=\"team\">\n                        <div className=\"seed\">{this.state.seed1}</div>\n                        <input type=\"radio\" name={this.state.matchId} value={this.state.team1} onChange={(e) => this.handleUpdateVote(e)} />\n                        <div className=\"logo\">\n                            <img aria-hidden=\"true\" src={this.state.imageURL1} alt=\"\" />\n                        </div>\n                    </label>\n                    <label className=\"team\">\n                        <div className=\"seed\">{this.state.seed2}</div>\n                        <input type=\"radio\" name={this.state.matchId} value={this.state.team2} onChange={(e) => this.handleUpdateVote(e)} />\n                        <div className=\"logo\">\n                            <img aria-hidden=\"true\" src={this.state.imageURL2} alt=\"\" />\n                        </div>\n                    </label>\n                </div>\n                <div className=\"summary\">\n                    <div className=\"team\">{this.state.team1}</div>\n                    <div className=\"scores\">{this.state.score1} - {this.state.score2}</div>\n                    <div className=\"team\">{this.state.team2}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Round extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            round: this.props.round,\n            roundInfo: this.props.roundInfo,\n            teams: this.props.team\n        }\n    }\n    render() {\n        return(\n            <React.Fragment>\n                <div className={\"rounds west \" + this.state.round}>\n                    {\n                        this.state.roundInfo.west.map(match => {\n                            let teamIds = [], teamScores = [], teamSeeds = [], teamImageURLS = [];\n                            Object.keys(match.score).map((teamId) => {\n                                teamIds.push(teamId)\n                                teamScores.push(match.score[teamId])\n                                if(teamId in this.state.teams) {\n                                    teamSeeds.push(this.state.teams[teamId].seed)\n                                    teamImageURLS.push(this.state.teams[teamId].imageURL)\n                                }\n                            })\n                            return <Matches matchId={match.matchId} team1={teamIds[0]} score1={teamScores[0]} seed1={teamSeeds[0]} imageURL1={teamImageURLS[0]} team2={teamIds[1]} score2={teamScores[1]} seed2={teamSeeds[1]} imageURL2={teamImageURLS[1]} key={match.matchId} group={this.state.group} />\n                        })\n                    }\n                </div>\n                <div className={\"rounds east \" + this.state.round}>\n                    {\n                        this.state.roundInfo.east.map(match => {\n                            let teamIds = [], teamScores = [], teamSeeds = [], teamImageURLS = [];\n                            Object.keys(match.score).map((teamId) => {\n                                teamIds.push(teamId)\n                                teamScores.push(match.score[teamId])\n                                if(teamId in this.state.teams) {\n                                    teamSeeds.push(this.state.teams[teamId].seed)\n                                    teamImageURLS.push(this.state.teams[teamId].imageURL)\n                                }\n                            })\n                            return <Matches matchId={match.matchId} team1={teamIds[0]} score1={teamScores[0]} seed1={teamSeeds[0]} imageURL1={teamImageURLS[0]} team2={teamIds[1]} score2={teamScores[1]} seed2={teamSeeds[1]} imageURL2={teamImageURLS[1]} key={match.matchId} group={this.state.group} />\n                        })\n                    }\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nclass Final extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            round: this.props.round,\n            roundInfo: this.props.roundInfo,\n            teams: this.props.team\n        }\n    }\n    render() {\n        let teamIds = [], teamScores = [], teamSeeds = [], teamImageURLS = [];\n        Object.keys(this.state.roundInfo.score).map((teamId) => {\n            teamIds.push(teamId)\n            teamScores.push(this.state.roundInfo.score[teamId])\n            if(teamId in this.state.teams) {\n                teamSeeds.push(this.state.teams[teamId].seed)\n                teamImageURLS.push(this.state.teams[teamId].imageURL)\n            }\n        })\n        return(\n            <div className={\"rounds \" + this.state.round}>\n                <Matches matchId={this.state.roundInfo.matchId} team1={teamIds[0]} score1={teamScores[0]} seed1={teamSeeds[0]} imageURL1={teamImageURLS[0]} team2={teamIds[1]} score2={teamScores[1]} seed2={teamSeeds[1]} imageURL2={teamImageURLS[1]} key={this.state.roundInfo.matchId}/>\n            </div>\n        )\n    }\n}\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            votes: [],\n            matches: [],\n            teams: {},\n            group: 'user'\n        };\n    }\n\n    async componentDidMount() {\n        if (!this.props.isAuthenticated) {\n            return;\n        }\n\n        try {\n            const matchesResults = await this.fetchMatches();\n            \n            const userVotes = await this.fetchVotes();\n                \n            this.setState({ votes: userVotes, matches: matchesResults.matches, teams: matchesResults.team, group: this.props.group });\n            \n            userVotes.map(function (vote) {\n                for (let key in vote.vote) {\n                    let input = document.querySelectorAll('input[value=' + vote.vote[key] + ']')[0];\n                    input.setAttribute('checked', '');\n                    input.parentNode.classList.add('pick');\n                    input.closest('.match').classList.add('voted');\n                }\n            })\n        } catch (e) {\n            console.log(e);\n        }\n\n        this.setState({ isLoading: false });\n    }\n\n    fetchVotes() {\n        return API.get(\"votes\", \"/votes\");\n    }\n\n    fetchMatches() {\n        return API.get(\"matches\", \"/matches\");\n    }\n\n    renderLander() {\n        return (\n            <div className=\"lander\">\n                <h1>Sports Predictor</h1>\n                <p>Sports Voting App</p>\n            </div>\n        );\n    }\n\n    renderVotes() {\n        return (\n            <div className=\"bracket\">\n                {\n                    Object.keys(this.state.matches).map(round => {\n                        if(round !== 'finals')\n                            return <Round key={round} roundInfo={this.state.matches[round]} round={round} team={this.state.teams}/>\n                        else\n                            return <Final key={round} roundInfo={this.state.matches[round]} round={round} team={this.state.teams}/>\n                    })\n                }\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"Home\">\n                {this.props.isAuthenticated ? this.renderVotes() : this.renderLander()}\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport { Button, Glyphicon } from \"react-bootstrap\";\nimport \"./LoaderButton.sass\";\n\nexport default ({\n  isLoading,\n  text,\n  loadingText,\n  className = \"\",\n  disabled = false,\n  ...props\n}) =>\n    <Button\n        className={`LoaderButton ${className}`}\n        disabled={disabled || isLoading}\n        {...props}\n    >\n        {isLoading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\n        {!isLoading ? text : loadingText}\n    </Button>;","import React, { Component } from \"react\";\nimport {HelpBlock, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { Auth } from \"aws-amplify\";\nimport \"./Login.sass\";\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: false,\n            email: \"\",\n            password: \"\",\n            isConfirmed: \"\",\n        };\n    }\n\n    validateForm() {\n        return this.state.email.length > 0 && this.state.password.length > 0;\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.id]: event.target.value\n        });\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n      \n        this.setState({ isLoading: true });\n      \n        try {\n            const data = await Auth.signIn(this.state.email, this.state.password);\n            this.props.updateUserGroup(data.signInUserSession.accessToken.payload['cognito:groups'][0]);\n            this.props.userHasAuthenticated(true);\n            this.props.history.push(\"/\");\n        } catch (e) {\n            document.getElementById('logInError').style.display = 'block';\n            document.getElementById('logInError').innerHTML = e.message;\n            this.setState({ isLoading: false });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Login\">\n                <form onSubmit={this.handleSubmit}>\n                    <FormGroup controlId=\"email\" bsSize=\"large\">\n                        <ControlLabel>Email</ControlLabel>\n                        <FormControl\n                        autoFocus\n                        type=\"email\"\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                    />\n                    </FormGroup>\n                    <FormGroup controlId=\"password\" bsSize=\"large\">\n                        <ControlLabel>Password</ControlLabel>\n                        <FormControl\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                        type=\"password\"\n                    />\n                    </FormGroup>\n                    <HelpBlock id=\"logInError\"></HelpBlock>\n                    <LoaderButton\n                        block\n                        bsSize=\"large\"\n                        disabled={!this.validateForm()}\n                        type=\"submit\"\n                        isLoading={this.state.isLoading}\n                        text=\"Login\"\n                        loadingText=\"Logging in…\"\n                    />\n                </form>\n            </div>\n        );\n    }\n}","export default {\n    apiGateway: {\n        REGION: \"us-west-2\",\n        URL: \"https://gpmvtsizq2.execute-api.us-west-2.amazonaws.com/prod\"\n    },\n    cognito: {\n        REGION: \"us-west-2\",\n        USER_POOL_ID: \"us-west-2_g2vylrjkc\",\n        APP_CLIENT_ID: \"7cj2det420ip36kdoc11t495ju\",\n        IDENTITY_POOL_ID: \"us-west-2:99af4718-3097-4fde-b6e7-565aa0ae122c\"\n    }\n  };","import React, { Component } from \"react\";\nimport {HelpBlock, FormGroup, FormControl, ControlLabel} from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { Auth } from \"aws-amplify\";\nimport AWS from \"aws-sdk\";\nimport config from \"../config\";\nimport \"./Signup.sass\";\n\nexport default class Signup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: false,\n            email: \"\",\n            password: \"\",\n            groups: \"NonAdmin\",\n            confirmPassword: \"\",\n            confirmationCode: \"\",\n            newUser: null,\n            username: \"\"\n        };\n    }\n\n    validateForm() {\n        return (\n            this.state.email.length > 0 &&\n            this.state.password.length > 0 &&\n            this.state.password === this.state.confirmPassword\n        );\n    }\n\n    validateConfirmationForm() {\n        return this.state.confirmationCode.length > 0;\n    }\n\n    addUsersToGroups() {\n        AWS.config.update({\n            credentials: new AWS.CognitoIdentityCredentials({\n                IdentityPoolId: config.cognito.IDENTITY_POOL_ID,\n            }),\n            region: config.cognito.REGION\n        });\n        const cognitoidentityserviceprovider = new AWS.CognitoIdentityServiceProvider();\n        const params = {\n            GroupName: 'NonAdmin',\n            UserPoolId: config.cognito.USER_POOL_ID,\n            Username: this.state.username\n        }\n        try {\n            cognitoidentityserviceprovider.adminAddUserToGroup(params, function(err, data) {\n                if(err) {\n                    console.log(err, err.stack);\n                }\n                else {\n                    console.log(data)\n                }\n            }); \n        }\n        catch (e) {\n            console.log(e.message);\n        }\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.id]: event.target.value\n        });\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n      \n        this.setState({ isLoading: true });\n      \n        try {\n            const newUser = await Auth.signUp({\n                username: this.state.email,\n                password: this.state.password\n            })\n            .then(data => this.state.username = data.userSub );\n            this.setState({\n                newUser\n            });\n            this.addUsersToGroups();\n            \n        } catch (e) {\n            document.getElementById('signUpErrors').style.display = 'block';\n            document.getElementById('signUpErrors').innerHTML = e.message;\n            console.log(e);\n        }\n      \n        this.setState({ isLoading: false });\n    }\n    \n    handleConfirmationSubmit = async event => {\n        event.preventDefault();\n      \n        this.setState({ isLoading: true });\n      \n        try {\n            await Auth.confirmSignUp(this.state.email, this.state.confirmationCode);\n            await Auth.signIn(this.state.email, this.state.password);\n            this.props.userHasAuthenticated(true);\n            this.props.history.push(\"/\");\n        } catch (e) {\n            document.getElementById('signUpConfirmationError').innerHTML += e.message;\n            this.setState({ isLoading: false });\n        }\n      }\n\n    renderConfirmationForm() {\n        return (\n            <form onSubmit={this.handleConfirmationSubmit}>\n                <FormGroup controlId=\"confirmationCode\" bsSize=\"large\">\n                    <ControlLabel>Confirmation Code</ControlLabel>\n                    <FormControl\n                        autoFocus\n                        type=\"tel\"\n                        value={this.state.confirmationCode}\n                        onChange={this.handleChange}\n                    />\n                    <HelpBlock id=\"signUpConfirmationError\">Please check your email for the code.</HelpBlock>\n                </FormGroup>\n                <LoaderButton\n                    block\n                    bsSize=\"large\"\n                    disabled={!this.validateConfirmationForm()}\n                    type=\"submit\"\n                    isLoading={this.state.isLoading}\n                    text=\"Verify\"\n                    loadingText=\"Verifying…\"\n                />\n            </form>\n        );\n    }\n\n    renderForm() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <FormGroup controlId=\"email\" bsSize=\"large\">\n                    <ControlLabel>Email</ControlLabel>\n                    <FormControl\n                        autoFocus\n                        type=\"email\"\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                    />\n                </FormGroup>\n                <FormGroup controlId=\"password\" bsSize=\"large\">\n                    <ControlLabel>Password</ControlLabel>\n                    <FormControl\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                        type=\"password\"\n                    />\n                </FormGroup>\n                <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n                    <ControlLabel>Confirm Password</ControlLabel>\n                    <FormControl\n                        value={this.state.confirmPassword}\n                        onChange={this.handleChange}\n                        type=\"password\"\n                    />\n                </FormGroup>\n                <HelpBlock id=\"signUpErrors\"></HelpBlock>\n                <LoaderButton\n                    block\n                    bsSize=\"large\"\n                    disabled={!this.validateForm()}\n                    type=\"submit\"\n                    isLoading={this.state.isLoading}\n                    text=\"Signup\"\n                    loadingText=\"Signing up…\"\n                />\n            </form>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"Signup\">\n                {this.state.newUser === null\n                ? this.renderForm()\n                : this.renderConfirmationForm()}\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport {HelpBlock, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { API } from \"aws-amplify\";\nimport \"./CreateTeam.sass\";\n\nexport default class CreateMatch extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: false,\n            round: \"\",\n            match: \"\",\n            team1: \"\",\n            team2: \"\",\n            nextMatch: \"\"\n        };\n    }\n\n    validateForm() {\n        return this.state.round.length > 0 && this.state.match.length > 0 && this.state.team1.length > 0 && this.state.team2.length > 0;\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.id]: event.target.value\n        });\n    }\n\n    createMatch(match) {\n        return API.post(\"matches\", \"/matches\", {\n            body: match \n        });\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n      \n        this.setState({ isLoading: true });\n      \n        try {\n            await this.createMatch({\n                round: this.state.round,\n                match: this.state.match,\n                team1: this.state.team1,\n                team2: this.state.team2,\n                nextMatch: this.state.nextMatch\n            });\n            this.props.history.push(\"/createMatch\");\n        } catch (e) {\n            document.getElementById('createMatchError').style.display = 'block';\n            document.getElementById('createMatchError').innerHTML = e.message;\n            this.setState({ isLoading: false });\n        }\n        document.getElementsByTagName('form')[0].reset();\n        this.setState({ isLoading: false });\n    }\n\n    render() {\n        return (\n            <div className=\"CreateMatch\">\n                <form onSubmit={this.handleSubmit}>\n                    <FormGroup controlId=\"round\" bsSize=\"large\">\n                        <ControlLabel>Round</ControlLabel>\n                        <FormControl\n                        autoFocus\n                        type=\"text\"\n                        value={this.state.round}\n                        onChange={this.handleChange}\n                    />\n                    </FormGroup>\n                    <FormGroup controlId=\"match\" bsSize=\"large\">\n                        <ControlLabel>Match</ControlLabel>\n                        <FormControl\n                        value={this.state.match}\n                        onChange={this.handleChange}\n                        type=\"text\"\n                    />\n                    </FormGroup>\n                    <FormGroup controlId=\"team1\" bsSize=\"large\">\n                        <ControlLabel>Team 1</ControlLabel>\n                        <FormControl\n                        value={this.state.team1}\n                        onChange={this.handleChange}\n                        type=\"text\"\n                    />\n                    </FormGroup>\n                    <FormGroup controlId=\"team2\" bsSize=\"large\">\n                        <ControlLabel>Team 2</ControlLabel>\n                        <FormControl\n                        value={this.state.team2}\n                        onChange={this.handleChange}\n                        type=\"text\"\n                    />\n                    </FormGroup>\n                    <FormGroup controlId=\"nextMatch\" bsSize=\"large\">\n                        <ControlLabel>Next Match</ControlLabel>\n                        <FormControl\n                        value={this.state.nextMatch}\n                        onChange={this.handleChange}\n                        type=\"text\"\n                    />\n                    </FormGroup>\n                    <HelpBlock id=\"createMatchError\"></HelpBlock>\n                    <LoaderButton\n                        block\n                        bsSize=\"large\"\n                        disabled={!this.validateForm()}\n                        type=\"submit\"\n                        isLoading={this.state.isLoading}\n                        text=\"Create Match\"\n                        loadingText=\"Creating Match…\"\n                    />\n                </form>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport {HelpBlock, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { API } from \"aws-amplify\";\nimport \"./CreateMatch.sass\";\n\nexport default class CreateTeam extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: false,\n            team: \"\",\n            seed: \"\",\n            imageURL: \"\"\n        };\n    }\n\n    validateForm() {\n        return this.state.team.length > 0 && this.state.seed.length > 0 && this.state.imageURL.length > 0;\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.id]: event.target.value\n        });\n    }\n\n    createMatch(team) {\n        return API.post(\"matches\", \"/team\", {\n            body: team \n        });\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n      \n        this.setState({ isLoading: true });\n      \n        try {\n            await this.createMatch({\n                team: this.state.team,\n                seed: this.state.seed,\n                imageURL: this.state.imageURL\n            });\n            this.props.history.push(\"/createTeam\");\n        } catch (e) {\n            document.getElementById('createTeamError').style.display = 'block';\n            document.getElementById('createTeamError').innerHTML = e.message;\n            this.setState({ isLoading: false });\n        }\n        document.getElementsByTagName('form')[0].reset();\n        this.setState({ isLoading: false });\n    }\n\n    render() {\n        return (\n            <div className=\"CreateTeam\">\n                <form onSubmit={this.handleSubmit}>\n                    <FormGroup controlId=\"team\" bsSize=\"large\">\n                        <ControlLabel>Team</ControlLabel>\n                        <FormControl\n                        autoFocus\n                        type=\"text\"\n                        value={this.state.team}\n                        onChange={this.handleChange}\n                    />\n                    </FormGroup>\n                    <FormGroup controlId=\"seed\" bsSize=\"large\">\n                        <ControlLabel>Seed</ControlLabel>\n                        <FormControl\n                        value={this.state.seed}\n                        onChange={this.handleChange}\n                        type=\"text\"\n                    />\n                    </FormGroup>\n                    <FormGroup controlId=\"imageURL\" bsSize=\"large\">\n                        <ControlLabel>Image Url</ControlLabel>\n                        <FormControl\n                        value={this.state.imageURL}\n                        onChange={this.handleChange}\n                        type=\"text\"\n                    />\n                    </FormGroup>\n                    <HelpBlock id=\"createTeamError\"></HelpBlock>\n                    <LoaderButton\n                        block\n                        bsSize=\"large\"\n                        disabled={!this.validateForm()}\n                        type=\"submit\"\n                        isLoading={this.state.isLoading}\n                        text=\"Create Team\"\n                        loadingText=\"Creating Team…\"\n                    />\n                </form>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport \"./NotFound.sass\";\n\nexport default () =>\n    <div className=\"NotFound\">\n        <h3>Sorry, page not found!</h3>\n    </div>;","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nexport default ({ component: C, props: cProps, ...rest }) =>\n  <Route {...rest} render={props => <C {...props} {...cProps} />} />;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./containers/Home\";\nimport Login from \"./containers/Login\";\nimport Signup from \"./containers/Signup\";\nimport CreateMatch from \"./containers/CreateMatch\";\nimport CreateTeam from \"./containers/CreateTeam\"\nimport NotFound from \"./containers/NotFound\";\nimport AppliedRoute from \"./components/AppliedRoute\";\n\nexport default ({ childProps }) =>\n    <Switch>\n        <AppliedRoute path=\"/\" exact component={Home} props={childProps} />\n        <AppliedRoute path=\"/login\" exact component={Login} props={childProps} />\n        <AppliedRoute path=\"/signup\" exact component={Signup} props={childProps} />\n        <AppliedRoute path=\"/createMatch\" exact component={CreateMatch} props={childProps} />\n        <AppliedRoute path=\"/createTeam\" exact component={CreateTeam} props={childProps} />\n        { /* Finally, catch all unmatched routes */ }\n        <Route component={NotFound} />\n    </Switch>;","import React, { Component, Fragment } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport { Auth } from \"aws-amplify\";\nimport Routes from \"./Routes\";\nimport \"./App.sass\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  \n    this.state = {\n      isAuthenticated: false,\n      isAuthenticating: true,\n      group: 'user'\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      await Auth.currentSession();\n      this.userHasAuthenticated(true);\n    }\n    catch(e) {\n      if (e !== 'No current user') {\n        console.log(e);\n      }\n    }\n  \n    this.setState({ isAuthenticating: false });\n  }\n  \n  userHasAuthenticated = authenticated => {\n    this.setState({ isAuthenticated: authenticated });\n  }\n\n  updateUserGroup = groupName => {\n    this.setState({ group: groupName });\n    console.log(this.state.group)\n  }\n\n  handleLogout = async event => {\n    await Auth.signOut();\n  \n    this.userHasAuthenticated(false);\n  \n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    const childProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      userHasAuthenticated: this.userHasAuthenticated,\n      updateUserGroup: this.updateUserGroup,\n      fetchUserGroup: this.fetchUserGroup,\n      group: this.state.group\n    };\n  \n    return (\n      !this.state.isAuthenticating &&\n      <div className=\"App\">\n        <Navbar fluid collapseOnSelect>\n          <Navbar.Header>\n            <Navbar.Brand>\n              <Link to=\"/\">Sports Predictor</Link>\n            </Navbar.Brand>\n            <Navbar.Toggle />\n          </Navbar.Header>\n          <Navbar.Collapse>\n            <Nav pullRight>\n              {this.state.isAuthenticated\n                ? <NavItem onClick={this.handleLogout}>Logout</NavItem>\n                : <Fragment>\n                    <LinkContainer to=\"/signup\">\n                      <NavItem>Signup</NavItem>\n                    </LinkContainer>\n                    <LinkContainer to=\"/login\">\n                      <NavItem>Login</NavItem>\n                    </LinkContainer>\n                  </Fragment>\n              }\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Routes childProps={childProps} />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './App';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Amplify from \"aws-amplify\";\nimport config from \"./config\";\nimport * as serviceWorker from './serviceWorker';\n\nAmplify.configure({\n    Auth: {\n        mandatorySignIn: true,\n        region: config.cognito.REGION,\n        userPoolId: config.cognito.USER_POOL_ID,\n        identityPoolId: config.cognito.IDENTITY_POOL_ID,\n        userPoolWebClientId: config.cognito.APP_CLIENT_ID\n    },\n    API: {\n        endpoints: [\n            {\n                name: \"votes\",\n                endpoint: config.apiGateway.URL,\n                region: config.apiGateway.REGION\n            },\n            {\n                name: \"matches\",\n                endpoint: config.apiGateway.URL,\n                region: config.apiGateway.REGION\n            },\n            {\n                name: \"team\",\n                endpoint: config.apiGateway.URL,\n                region: config.apiGateway.REGION\n            }\n        ]\n    }\n});\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}